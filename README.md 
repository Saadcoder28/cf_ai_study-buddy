# cf_ai_study-buddy

An AI-powered adaptive learning assistant built on Cloudflare's edge platform. This application uses Llama 3.3 via Workers AI to provide personalized tutoring experiences with conversation memory and adaptive difficulty adjustment.

## 🎯 Features

- **Intelligent Tutoring**: AI-powered explanations using Llama 3.3 on Workers AI
- **Adaptive Learning**: Difficulty adjusts based on student performance
- **Conversation Memory**: Maintains context across sessions using Durable Objects
- **Real-time Chat**: Instant responses with streaming support
- **Progress Tracking**: Monitors learning patterns and topic mastery
- **Voice Input**: Optional speech-to-text for accessibility

## 🏗️ Architecture

### Components

1. **LLM**: Llama 3.3 via Cloudflare Workers AI
2. **Workflow**: Cloudflare Workers + Workflows for orchestration
3. **User Interface**: React app deployed on Cloudflare Pages with real-time chat
4. **State Management**: Durable Objects for persistent conversation history and user progress

### Tech Stack

- **Backend**: Cloudflare Workers, Workers AI, Durable Objects, Workflows
- **Frontend**: React 18, Vite, TailwindCSS
- **API**: RESTful endpoints with streaming support
- **Deployment**: Cloudflare Pages + Workers

## 📋 Prerequisites

- Node.js 18+ and npm
- Cloudflare account (free tier works)
- Wrangler CLI installed globally

```bash
npm install -g wrangler
```

## 🚀 Quick Start

### 1. Clone and Install

```bash
git clone <your-repo-url>
cd cf_ai_study-buddy
npm install
```

### 2. Configure Cloudflare

Login to Wrangler:
```bash
wrangler login
```

Create a `.dev.vars` file in the root:
```bash
CLOUDFLARE_ACCOUNT_ID=your_account_id
```

Get your account ID:
```bash
wrangler whoami
```

### 3. Run Locally

Start the development server:
```bash
npm run dev
```

This starts:
- Workers backend on `http://localhost:8787`
- React frontend on `http://localhost:5173`

### 4. Test the Application

Open `http://localhost:5173` in your browser and try:
- Ask a question: "Explain recursion in simple terms"
- Follow up: "Can you give me an example?"
- The AI remembers context and adapts explanations

## 📁 Project Structure

```
cf_ai_study-buddy/
├── worker/
│   ├── src/
│   │   ├── index.ts              # Main Worker entry point
│   │   ├── durable-objects/
│   │   │   └── StudySession.ts   # Conversation & progress storage
│   │   ├── workflows/
│   │   │   └── learning.ts       # Adaptive learning workflow
│   │   └── utils/
│   │       ├── ai.ts             # Workers AI integration
│   │       └── adaptive.ts       # Difficulty adjustment logic
│   ├── wrangler.toml             # Worker configuration
│   └── package.json
├── frontend/
│   ├── src/
│   │   ├── App.tsx               # Main React component
│   │   ├── components/
│   │   │   ├── Chat.tsx          # Chat interface
│   │   │   ├── ProgressBar.tsx   # Learning progress
│   │   │   └── VoiceInput.tsx    # Voice recognition
│   │   └── api/
│   │       └── client.ts         # API client
│   ├── index.html
│   ├── vite.config.ts
│   └── package.json
├── README.md
├── PROMPTS.md
└── package.json
```

## 🔧 Configuration

### Wrangler Configuration (`worker/wrangler.toml`)

```toml
name = "cf-ai-study-buddy"
main = "src/index.ts"
compatibility_date = "2024-01-01"

[ai]
binding = "AI"

[[durable_objects.bindings]]
name = "STUDY_SESSION"
class_name = "StudySession"

[[migrations]]
tag = "v1"
new_classes = ["StudySession"]
```

### Environment Variables

Create `.dev.vars` for local development:
```
CLOUDFLARE_ACCOUNT_ID=your_account_id_here
```

## 🧪 Testing

Run the application locally:
```bash
npm run dev
```

Test API endpoints:
```bash
# Start a new session
curl http://localhost:8787/api/session/start

# Send a message
curl -X POST http://localhost:8787/api/chat \
  -H "Content-Type: application/json" \
  -d '{"sessionId": "your-session-id", "message": "Explain binary search"}'
```

## 🚢 Deployment

### Deploy Backend (Workers)

```bash
cd worker
wrangler deploy
```

### Deploy Frontend (Pages)

```bash
cd frontend
npm run build
wrangler pages deploy dist --project-name=cf-ai-study-buddy
```

Or connect your GitHub repo to Cloudflare Pages for automatic deployments.

## 🎮 Usage Examples

### Basic Chat
```
User: "What is a linked list?"
AI: [Provides explanation adapted to user's level]
User: "Can you show me an example in Python?"
AI: [Provides code example with context from previous message]
```

### Adaptive Difficulty
The system tracks:
- Response understanding (detected through follow-up questions)
- Topic mastery (consistent correct understanding)
- Adjusts explanation complexity automatically

### Progress Tracking
Access your learning dashboard at `/progress` to see:
- Topics covered
- Mastery levels
- Conversation history
- Recommended next topics

## 🔑 Key Features Implementation

### 1. LLM Integration (Workers AI)
Uses Llama 3.3 70B model with custom system prompts for educational content.

### 2. Durable Objects (Memory)
Each study session persists:
- Full conversation history
- Student performance metrics
- Topic mastery levels
- Learning preferences

### 3. Workflows (Coordination)
Manages:
- Multi-turn conversation flow
- Difficulty adjustment triggers
- Progress updates
- Topic recommendations

### 4. Real-time Chat
- Streaming responses for better UX
- Instant feedback
- Voice input support (optional)

## 📊 API Endpoints

### `POST /api/session/start`
Creates a new study session
```json
{
  "userId": "optional-user-id"
}
```

### `POST /api/chat`
Send a message to the AI tutor
```json
{
  "sessionId": "session-id",
  "message": "Your question here"
}
```

### `GET /api/progress/:sessionId`
Get learning progress for a session

### `POST /api/voice`
Process voice input (speech-to-text)

## 🤝 Contributing

This project was created as part of a Cloudflare AI application assignment. Contributions welcome!

## 📝 License

MIT

## 👤 Author

**Saad Amin**
- Email: saad05@vt.edu
- GitHub: [@Saadcoder28](https://github.com/Saadcoder28)
- Portfolio: [Link](your-portfolio-url)

## 🙏 Acknowledgments

- Built on Cloudflare Workers AI (Llama 3.3)
- Inspired by adaptive learning research at Lafayette College
- Uses Cloudflare's edge computing platform

## 🐛 Troubleshooting

### Wrangler Login Issues
```bash
wrangler logout
wrangler login
```

### Local Development Not Starting
```bash
# Clear Wrangler cache
rm -rf .wrangler
npm run dev
```

### Durable Objects Migration
If you modify the Durable Object class:
```bash
wrangler deploy --new-class StudySession
```

## 📚 Additional Resources

- [Cloudflare Workers AI Docs](https://developers.cloudflare.com/workers-ai/)
- [Durable Objects Guide](https://developers.cloudflare.com/durable-objects/)
- [Workflows Documentation](https://developers.cloudflare.com/workflows/)
- [Cloudflare Pages](https://developers.cloudflare.com/pages/)

---

**Built with ☁️ on Cloudflare Edge**
# cf_ai_study-buddy

An AI-powered adaptive learning assistant built on Cloudflare's edge platform. This application uses Llama 3.3 via Workers AI to provide personalized tutoring experiences with conversation memory and adaptive difficulty adjustment.

## 🎯 Features

- Intelligent Tutoring: AI-powered explanations using Llama 3.3 on Workers AI
- Adaptive Learning: Difficulty adjusts based on student performance
- Conversation Memory: Maintains context across sessions using Durable Objects
- Real-time Chat: Instant responses with streaming support
- Progress Tracking: Monitors learning patterns and topic mastery
- Voice Input: Optional speech-to-text for accessibility

## 🏗️ Architecture

### Components

1. LLM: Llama 3.3 via Cloudflare Workers AI
2. Workflow: Cloudflare Workers + Workflows for orchestration
3. User Interface: React app deployed on Cloudflare Pages with real-time chat
4. State Management: Durable Objects for persistent conversation history and user progress

### Tech Stack

- Backend: Cloudflare Workers, Workers AI, Durable Objects, Workflows
- Frontend: React 18, Vite, TailwindCSS
- API: RESTful endpoints with streaming support
- Deployment: Cloudflare Pages + Workers

## 📋 Prerequisites

- Node.js 18+ and npm
- Cloudflare account (free tier works)
- Wrangler CLI installed globally
```bash
npm install -g wrangler
```

## 🚀 Quick Start

### 1. Clone and Install
```bash
git clone https://github.com/Saadcoder28/cf_ai_study-buddy.git
cd cf_ai_study-buddy
npm install
```

### 2. Configure Cloudflare
```bash
wrangler login
wrangler whoami
```

### 3. Run Locally
```bash
npm run dev
```

This starts:
- Worker backend on http://localhost:8787
- React frontend on http://localhost:5173

## ✅ Cloudflare Requirements Met

1. LLM: Llama 3.3 70B via Workers AI with adaptive system prompts
2. Workflow/Coordination: Cloudflare Workers for API orchestration + Durable Objects for state management
3. User Input: Chat interface + voice input deployed on Cloudflare Pages
4. Memory/State: Durable Objects storing conversation history, progress metrics, and learning state

## 📊 API Endpoints

- `POST /api/session/start` - Creates a new study session
- `POST /api/chat` - Send a message to the AI tutor
- `GET /api/progress/:sessionId` - Get learning progress
- `GET /api/health` - Health check endpoint

## 🚢 Deployment

### Deploy Backend
```bash
cd worker
wrangler deploy
```

### Deploy Frontend
```bash
cd frontend
npm run build
wrangler pages deploy dist --project-name=cf-ai-study-buddy
```

## 👤 Author

Saad Amin
- Email: saad05@vt.edu
- GitHub: @Saadcoder28

## 📝 License

MIT

---

Built with ☁️ on Cloudflare Edge